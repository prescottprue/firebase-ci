name: NPM Package Publish

on:
  push:
    branches:
      - master
      - next

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        env:
          CI: true
        run: yarn install --frozen-lockfile

      - name: Run Unit Tests + Coverage
        run: yarn test:cov && yarn codecov

      - name: Build
        if: success()
        run: npm run build

      - name: Archive Build Artifact
        uses: actions/upload-artifact@master
        if: success()
        with:
          name: firebase-ci-build
          path: lib

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Check package version
        uses: technote-space/package-version-check-action@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - name: Download Build Artifact
        uses: actions/download-artifact@master
        with:
          name: firebase-ci-build

      - name: Semantic Release
        id: semantic   # Need an `id` for output variables
        uses: cycjimmy/semantic-release-action@v2
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      # - name: Do something when a new release published
      #   if: steps.semantic.outputs.new_release_published == 'true'
      #   run: ...
  # publish-gpr:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v1

  #     - name: Setup Node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12
  #         registry-url: https://registry.npmjs.org/

  #     - name: Publish To Github
  #       run: npm publish $(if [ ${{github.ref}} == 'refs/heads/master' ]; then echo '--tag next';fi;)
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}